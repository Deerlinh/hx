<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" 
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- 1、引入数据源: jdbc配置文件 or jndi文件 ${db.source} -->
	<import resource="classpath:spring/db-jdbc.xml" />
	<!--<import resource="classpath:spring/db-jndi.xml" />-->

<!-- spm数据库的配置 -->
	<!-- spm的SqlSessionFactory对象 -->
	<bean id="hongxingSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--(1)注入数据库连接池 -->
		<property name="dataSource" ref="hongxingDataSource"></property>
		<!--(2)配置Mybatis全局配置文件：mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis/config/mybatis-config.xml"></property>
		<!--(3)扫描entity包，使用别名，以类名为别名 -->
		<property name="typeAliasesPackage">
			<value>com.jianq.manager.spm.**.entity,com.jianq.manager.spm.**.dto,com.jianq.manager.spm.**.vo
			</value>
		</property>
		<!--(4)扫描sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath*:com/jianq/manager/spm/**/mapping/*.xml"></property>
	</bean>
	
	<!-- spm的 自动扫描dao接口包，创建dao实现类，注入到spring容易中 -->
	<bean id="hongxingScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="hongxingSqlSessionFactory"></property>
		<!-- 给出扫描Dao接口包 -->
		<property name="basePackage">
			<value>com.jianq.manager.spm.*.dao
			</value>
		</property>
	</bean>
</beans>